use northwind;
/*4.Conociendo a las empleadas: El objetivo de cualquier buena jefa (o trabajadora) en una empresa deber√≠a ser conocer bien a sus compa√±eras. Para lograrlo, vamos a dise√±ar una consulta SQL para obtener una lista con los datos de las empleadas y empleados de la empresa Northwind. Esta consulta incluir√° los campos employee_id, last_name y first_name.*/
select employee_id, last_name, first_name
from employees;
/*5.Conociendo los productos m√°s baratos:
Supongamos que en nuestro primer d√≠a en la empresa nos informan que est√°n llevando a cabo una reestructuraci√≥n del negocio. Nuestras compa√±eras nos comentan que, en estos momentos, Northwind tiene una amplia gama de productos en venta, algunos de los cuales tienen un √©xito limitado entre las clientas.
Nuestra primera tarea consiste en identificar aquellos productos (tabla products) cuyos precios por unidad oscilen entre 0 y 5 d√≥lares, es decir, los productos m√°s asequibles.*/
select product_id, product_name,unit_price
from products
where unit_price between 0 and 5;
/*6.Conociendo los productos que no tienen precio:
Para comprobar si los datos en la tabla products est√°n correctos, nos interesa seleccionar aquellos productos que no tengan precio, porque lo hayan dejado vacio al introducir los datos (NULL).*/
select product_id, product_name,unit_price
from products
where unit_price is null;
/*7.Comparando productos:
Ahora obt√©n los datos de aquellos productos con un precio menor a 15 d√≥lares, pero s√≥lo aquellos que tienen un ID menor que 10 (para tener una muestra significativa pero no tener que ver todos los productos existentes).
üí° Pista üí° Recuerda que podemos incluir varias condiciones en el WHERE.*/
select product_id, product_name,unit_price
from products
where unit_price <15 and product_id <10 ;
/*8.Cambiando de operadores:
Ahora vamos a hacer la misma consulta que en ejercicio anterior, pero haciendo invirtiendo el uso de los operadores y queremos saber aquellos que tengan un precio superior a 15 d√≥lares y un ID superior a 10..
üí° Pista üí° Podemos usar NOT*/
select product_id, unit_price
from products
where unit_price >15 and product_id >10 ;
/*9.Conociendo los paises a los que vendemos:
A Northwind le interesa conocer los datos de los pa√≠ses que hacen pedidos (orders) para focalizar el negocio en esas regiones y al mismo tiempo crear campa√±as de marketing para conseguir mejorar en las otras regiones. Realiza una consulta para obtener ese dato.*/
select distinct ship_country
from orders;
/*10.Conociendo el tipo de productos que vendemos en Northwind:
Crea una consulta que muestre los primeros 10 productos seg√∫n su ID y que nos indique el nombre de dichos productos y sus precios.*/
select  product_id, product_name,unit_price
from products
ORDER BY product_id DESC;
/*11.Ordenando los resultados:
Ahora realiza la misma consulta pero que nos muestre los √∫ltimos 10 productos seg√∫n su ID de manera descendiente.*/
select  product_id, product_name,unit_price
from products
ORDER BY product_id ASC;
/*12.Que pedidos tenemos en nuestra BBDD:
√öltimamente ha habido algo de descontrol en la empresa a la hora de controlar los pedidos. Nos interesa conocer los distintos pedidos que hemos tenido (mostrar los valores √∫nicos de ID en la tabla order_details).*/
select distinct order_id
from order_details;
/*13.Qu√© pedidos han gastado m√°s:
Una vez hemos inspeccionado el tipo de pedidos que tenemos en la empresa, desde la direcci√≥n nos piden conocer los 3 pedidos que han supuesto un mayor ingreso para la empresa. Crea una columna en esta consulta con el alias ImporteTotal. Nota: Utiliza unit_price y quantity para calcular el importe total.*/
select distinct order_id, quantity*unit_price as Importe_total
from order_details
order by Importe_total DESC;
/*14.Los pedidos que est√°n entre las posiciones 5 y 10 de nuestro ranking:
Ahora, no sabemos bien por qu√© raz√≥n, desde el departamento de Ventas nos piden seleccionar el ID de los pedidos situados entre la 5 y la 10 mejor posici√≥n en cuanto al coste econ√≥mico total ImporteTotal.
üí° Pista üí° Usa LIMIT y OFFSET para mostrar los resultados.*/
select distinct order_id, quantity*unit_price as Importe_total
from order_details
LIMIT 5
OFFSET 5;
/*15.Qu√© categor√≠as tenemos en nuestra BBDD:
De cara a ver c√≥mo de diversificado est√° el negocio, se nos solicita una lista de las categor√≠as que componen los tipos de pedido de la empresa. Queremos que la lista de resultado sea renombrada como "NombreDeCategoria".*/
select distinct category_name as NombreDeCategoria
from categories;
/*16.Selecciona envios con retraso:
Nos hacen llegar desde la direcci√≥n la preocupaci√≥n acerca del cumplimiento de las fechas de env√≠o. √öltimamente se est√°n dando retrasos en muchas entregas y por ello se busca realizar la acci√≥n preventiva de enviar los paquetes con varios d√≠as adicionales de antelacion. Para comenzar a planear esos env√≠os anticipados, nos piden conocer cu√°l ser√≠a la fecha de env√≠o (ShippedDate) de los pedidos almacenados en la base de datos, si estos sufrieran un retraso de 5 d√≠as. Nos piden mostrar la nueva fecha renombrada como FechaRetrasada.
üí° Pista üí° Para realizar lo anterior, busca documentaci√≥n de la funci√≥n DATE_ADD para MySQL.*/
select shipped_date, date_add(shipped_date, interval 5 day) AS Fecha_Retrasada
from orders
where date_add(shipped_date, interval 5 day) is not null;

/*17.Selecciona los productos m√°s rentables:
Gracias a un an√°lisis realizado en los √∫ltimos meses en la empresa, se ha comprobado que el rango de productos que puede dar m√°s beneficios parece ser el de aquellos con un precio mayor o igual a 15 d√≥lares, pero menor o igual que 50 d√≥lares. Selecciona los datos de ese rango de productos usando el operador BETWEEN.*/
select distinct product_id,product_name, unit_price as Productos_rentables
from products
where unit_price between 15 and 50 
order by unit_price DESC;
/* 18. Selecciona los productos con unos precios dados:
Queremos conocer los datos de los productos que tengan exactamente un precio de 18, 19 o 20 d√≥lares (un rango muy concreto de precios del que la empresa quiere maximizar sus ventas en un futuro). Usa IN para conseguirlo de manera eficiente.*/
select distinct product_id,product_name, unit_price as Productos_rango_medio
from products
where unit_price in (18,19,20); 

























